{"version":3,"sources":["webpack:///./src/pages/contacts.js"],"names":["submit","contactsBody","input","formField","FormField","placeholder","useState","className","type","value","onChange","e","setValue","style","top","fontSize","opacity","color","fontWeight","textTransform","form","shortcodes","GenericLink","ContactsBody","children","ContactsForm","padding","rows","HeaderLogo","body","mdx","components"],"mappings":"kyFAWMA,EAAN,UAYMC,EAAN,UAiBA,IAAMC,EAAN,UAkBMC,EAAN,UA8BA,SAASC,EAAU,GAAwB,IAAxB,EAAuB,EAAvB,KAAQC,EAAe,EAAfA,YAAe,EACdC,mBAA1B,IAAM,EADkC,KAClC,EADkC,KAGxC,OACE,yBAAKC,UAAL,GACE,2BACEA,UADF,EAEEC,KAFF,EAGEC,MAHF,EAIEC,SAAUC,YAAC,OAAIC,EAASD,SAJ1B,UAMA,2BACEE,MACEJ,EACI,CACEK,IADF,OAEEC,SAFF,UAGEC,QAHF,IAIEC,MAJF,UAKEC,WALF,MAMEC,cAAe,aATzB,MAcE,IAMR,IAAMC,EAAN,WA8BA,IAAMC,EAAa,CAAEC,gBAAaC,aAjHlC,SAAsB,GAAe,IAAbC,EAAY,EAAZA,SACtB,OAAO,yBAAKjB,UAAL,GAAP,IAgH8CkB,aApBhD,WACE,OACE,0BAAMlB,UAAN,GACE,qBAAWC,KAAX,OAAuBH,YAAvB,0BACA,qBAAWG,KAAX,OAAuBH,YAAvB,qBAIA,8BACEQ,MAAO,CAAEa,QAAS,QAClBnB,UAFF,EAGEC,KAHF,WAIEmB,KAJF,IAKEtB,YALF,gCAOA,uBAAQI,MAAR,QAAsBF,UAAtB,MAKwDqB,gBAuB9D,UArBkB,WAAO,IAEdC,EAFa,OAEpBC,IAAOD,KAST,OACE,2BACE,4BACA,iCAAaE,WAAb,GACE,qCAAa,M","file":"component---src-pages-contacts-js-070f1cf690da2757d996.js","sourcesContent":["import React, { useState } from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { MDXRenderer } from \"gatsby-plugin-mdx\"\nimport { MDXProvider } from \"@mdx-js/react\"\nimport { css } from \"linaria\"\n\nimport Layout from \"../components/Layout\"\nimport { GenericLink, Submit } from \"../components/buttons\"\nimport SEO from \"../components/seo\"\nimport HeaderLogo from \"../components/HeaderLogo\"\n\nconst submit = css`\n  background-color: #3d1300;\n  color: #fff;\n  width: 11.125rem;\n  height: 5rem;\n  align-self: flex-end;\n  margin: 1.5rem 0;\n  font-family: \"Acumin\";\n  font-size: 1.5rem;\n  border: none;\n`\n\nconst contactsBody = css`\n  display: flex;\n  flex-direction: row;\n\n  > * {\n    flex: 1;\n  }\n\n  @media only screen and (max-width: 750px) {\n    flex-direction: column;\n  }\n`\n\nfunction ContactsBody({ children }) {\n  return <div className={contactsBody}>{children}</div>\n}\n\nconst input = css`\n  border: 0.125rem solid #3d1300;\n  background-color: #ffd000;\n  color: #430f00;\n  font-family: \"Acumin\";\n  font-size: 1.5rem;\n  padding: 2rem 0.2rem 0.2rem 1rem;\n  padding-top: 2rem;\n  width: 100%;\n  outline: 0;\n\n  :focus {\n    border: 2px solid #fff;\n    outline: 0;\n    background-color: #fff;\n  }\n`\n\nconst formField = css`\n  margin: 0.625rem 0;\n  position: relative;\n\n  > small {\n    color: #3d1300;\n    font-family: \"Acumin\";\n    font-size: 1rem;\n    position: absolute;\n    top: 1.4rem;\n    left: 1.1875rem;\n    transition: all 0.2s ease-in-out;\n    font-size: 1.5rem;\n    text-transform: capitalize;\n    font-weight: 400;\n    letter-spacing: 0.047rem;\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  > input:focus + small {\n    top: 1rem;\n    font-size: 0.75rem;\n    opacity: 1;\n    color: #430f00;\n    font-weight: 700;\n    text-transform: uppercase;\n  }\n`\n\nfunction FormField({ type, placeholder }) {\n  const [value, setValue] = useState(\"\")\n\n  return (\n    <div className={formField}>\n      <input\n        className={input}\n        type={type}\n        value={value}\n        onChange={e => setValue(e.target.value)}\n      />\n      <small\n        style={\n          value\n            ? {\n                top: \"1rem\",\n                fontSize: \"0.75rem\",\n                opacity: \"1\",\n                color: \"#430f00\",\n                fontWeight: \"700\",\n                textTransform: \"uppercase\",\n              }\n            : null\n        }\n      >\n        {placeholder}\n      </small>\n    </div>\n  )\n}\n\nconst form = css`\n  margin-left: 2rem;\n  display: flex;\n  flex-direction: column;\n\n  > textarea {\n    margin-top: 0.625rem;\n  }\n`\n\nfunction ContactsForm() {\n  return (\n    <form className={form}>\n      <FormField type=\"text\" placeholder=\"Il tuo nome e cognome\" />\n      <FormField type=\"text\" placeholder=\"indirizzo e-mail\" />\n      {/* <FormField type=\"text\" placeholder=\"il tuo cognome\" />\n      <FormField type=\"text\" placeholder=\"nome azienda (facoltativo)\" />\n      <FormField type=\"text\" placeholder=\"telefono (facoltativo)\" /> */}\n      <textarea\n        style={{ padding: \"1rem\" }}\n        className={input}\n        type=\"textarea\"\n        rows=\"6\"\n        placeholder=\"Scrivi qui la tua richiesta\"\n      />\n      <Submit value=\"Invia\" className={submit} />\n    </form>\n  )\n}\n\nconst shortcodes = { GenericLink, ContactsBody, ContactsForm, HeaderLogo }\n\nconst IndexPage = () => {\n  const {\n    mdx: { body },\n  } = useStaticQuery(graphql`\n    query contactsQuery {\n      mdx(frontmatter: { id: { eq: \"contacts\" } }) {\n        body\n      }\n    }\n  `)\n\n  return (\n    <Layout>\n      <SEO />\n      <MDXProvider components={shortcodes}>\n        <MDXRenderer>{body}</MDXRenderer>\n      </MDXProvider>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}